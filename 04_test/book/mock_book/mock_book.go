// Code generated by MockGen. DO NOT EDIT.
// Source: book/book.go

// Package mock_book is a generated GoMock package.
package mock_book

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockBook is a mock of Book interface
type MockBook struct {
	ctrl     *gomock.Controller
	recorder *MockBookMockRecorder
}

// MockBookMockRecorder is the mock recorder for MockBook
type MockBookMockRecorder struct {
	mock *MockBook
}

// NewMockBook creates a new mock instance
func NewMockBook(ctrl *gomock.Controller) *MockBook {
	mock := &MockBook{ctrl: ctrl}
	mock.recorder = &MockBookMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockBook) EXPECT() *MockBookMockRecorder {
	return m.recorder
}

// ShowISBN mocks base method
func (m *MockBook) ShowISBN() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ShowISBN")
	ret0, _ := ret[0].(string)
	return ret0
}

// ShowISBN indicates an expected call of ShowISBN
func (mr *MockBookMockRecorder) ShowISBN() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ShowISBN", reflect.TypeOf((*MockBook)(nil).ShowISBN))
}
